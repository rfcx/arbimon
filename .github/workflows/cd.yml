name: 'CD'
on:
  workflow_dispatch:
    inputs:
      deploy_cli:
        description: Deploy CLI
        type: boolean
        default: true
      deploy_api:
        description: Deploy API
        type: boolean
        default: true
      deploy_web:
        description: Deploy Website
        type: boolean
        default: true
  push:
    branches:
      - master
      - staging
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      ECR_REGISTRY: '887044485231.dkr.ecr.eu-west-1.amazonaws.com'
    steps:
      - name: 'Setup: Docker Buildx'
        # v1 (1.6.0) @ 12 Nov 2021 https://github.com/docker/setup-buildx-action/tags
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25

      - name: 'Setup: Configure AWS credentials'
        # v1 (1.6.1) @ 19 Jan 2022 https://github.com/aws-actions/configure-aws-credentials/tags
        uses: aws-actions/configure-aws-credentials@05b148adc31e091bafbaf404f745055d4d3bc9d2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'

  deploy:
    runs-on: deployment-runner
    env:
      ECR_REGISTRY: '887044485231.dkr.ecr.eu-west-1.amazonaws.com'
    steps:
      - name: 'Setup: Git checkout'
        # v3 (3.0.0) @ 02 Mar 2022 https://github.com/actions/checkout/tags
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846

      - name: 'Setup: ENV from Git'
        run: |
          if [[ "${{ github.event_name }}" = "pull_request" ]]; then echo "BRANCH_NAME=`echo ${GITHUB_HEAD_REF}`"; else echo "BRANCH_NAME=`echo ${GITHUB_REF#refs/heads/}`"; fi >> $GITHUB_ENV
          echo "COMMIT_TITLE=`git show -s --format='%s'`" >> $GITHUB_ENV
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "RELEASE_DATE=$(date +"%s")" >> $GITHUB_ENV

      - name: 'Setup: ENV from Branch'
        # v0 (0.2.2) @ 03 Nov 2021 https://github.com/kanga333/variable-mapper/tags
        uses: kanga333/variable-mapper@92703696e9a3f370901c3d53ae3836569b1055e5
        with:
          key: '${{ env.BRANCH_NAME }}'
          map: |
            {
              "master": {
                "NAMESPACE": "production",
                "ECR_REPO_API": "biodiversity-api",
                "ECR_REPO_CLI": "biodiversity-cli",
                "ECR_REPO_WEBSITE": "biodiversity-website",
                "SLACK_WEBHOOK_SUCCESS": "${{ secrets.SLACK_ALERT_BIO_WEBHOOK }}",
                "SLACK_WEBHOOK_FAILURE": "${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}",
                "URL_WEB": "bio.rfcx.org",
                "URL_API": "bio.rfcx.org/api"
              },
              "staging": {
                "NAMESPACE": "staging",
                "ECR_REPO_API": "biodiversity-api/staging",
                "ECR_REPO_CLI": "biodiversity-cli/staging",
                "ECR_REPO_WEBSITE": "biodiversity-website/staging",
                "SLACK_WEBHOOK_SUCCESS": "${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}",
                "SLACK_WEBHOOK_FAILURE": "${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}",
                "URL_WEB": "staging-bio.rfcx.org",
                "URL_API": "staging-bio.rfcx.org/api"
              },
              ".*": {
                "NAMESPACE": "testing",
                "ECR_REPO_API": "biodiversity-api/testing",
                "ECR_REPO_CLI": "biodiversity-cli/testing",
                "ECR_REPO_WEBSITE": "biodiversity-website/testing",
                "SLACK_WEBHOOK_SUCCESS": "${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}",
                "SLACK_WEBHOOK_FAILURE": "${{ secrets.SLACK_ALERT_BIODT_WEBHOOK }}",
                "URL_WEB": "testing-bio.rfcx.org",
                "URL_API": "testing-bio.rfcx.org/api"
              }
            }

      - name: 'Setup: Login to ECR'
        id: login-ecr
        # v1 (1.3.3) @ 03 Nov 2021 https://github.com/aws-actions/amazon-ecr-login/tags
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-west-1'

      - name: 'Build: Docker build API'
        # v2 (2.10.0) @ 15 Mar 2022 https://github.com/docker/build-push-action/tags
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          build-args: |
            mode=${{ env.NAMESPACE }}
            release_commit=${{ env.SHORT_SHA }}
            release_date=${{ env.RELEASE_DATE }}
          target: api
          file: tools/deployment/Dockerfile
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # secrets: |
          #   "EXAMPLE_SECRET=${{ secrets.EXAMPLE }}"
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_API }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_API }}:${{ github.run_number }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_API }}:${{ env.SHORT_SHA }}

      - name: 'Build: Docker build CLI'
        # v2 (2.10.0) @ 15 Mar 2022 https://github.com/docker/build-push-action/tags
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          build-args: |
            mode=${{ env.NAMESPACE }}
            release_commit=${{ env.SHORT_SHA }}
            release_date=${{ env.RELEASE_DATE }}
          target: cli
          file: tools/deployment/Dockerfile
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # secrets: |
          #   "EXAMPLE_SECRET=${{ secrets.EXAMPLE }}"
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_CLI }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_CLI }}:${{ github.run_number }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_CLI }}:${{ env.SHORT_SHA }}

      - name: 'Build: Docker build WEB'
        # v2 (2.10.0) @ 15 Mar 2022 https://github.com/docker/build-push-action/tags
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          build-args: |
            mode=${{ env.NAMESPACE }}
            release_commit=${{ env.SHORT_SHA }}
            release_date=${{ env.RELEASE_DATE }}
          target: website
          file: tools/deployment/Dockerfile
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # secrets: |
          #   "EXAMPLE_SECRET=${{ secrets.EXAMPLE }}"
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_WEBSITE }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_WEBSITE }}:${{ github.run_number }}
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_WEBSITE }}:${{ env.SHORT_SHA }}

      - name: 'Deploy: Set image version'
        run: |
          find tools/deployment -name "*.yaml" -exec sed -i s/:latest/:${{ github.run_number }}/g {} +
          find tools/deployment -name "*.yaml" -exec sed -i s/JOB_NUMBER/${{ github.run_number }}/g {} +

      - name: 'Deploy: Kubernetes apply CLI (starts migrate)'
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.deploy_cli }}
        # v1 (1.21.2) @ 03 Nov 2021 https://github.com/actions-hub/kubectl/tags
        uses: actions-hub/kubectl@365773786ebd92c7b36b6ab80e17d4a213ab0cd1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_SUPER }}
        with:
          args: apply -f ./tools/deployment/cli/${{ env.NAMESPACE }}

      - name: 'Deploy: Wait for migrate to complete successfully'
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.deploy_cli }}
        # v1 (1.21.2) @ 03 Nov 2021 https://github.com/actions-hub/kubectl/tags
        uses: actions-hub/kubectl@365773786ebd92c7b36b6ab80e17d4a213ab0cd1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_SUPER }}
        with:
          args: wait --for=condition=complete --timeout=500s -n ${{ env.NAMESPACE }} job/biodiversity-cli-migrate-${{ github.run_number }}

      - name: 'Deploy: Kubernetes apply API'
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.deploy_api }}
        # v1 (1.21.2) @ 03 Nov 2021 https://github.com/actions-hub/kubectl/tags
        uses: actions-hub/kubectl@365773786ebd92c7b36b6ab80e17d4a213ab0cd1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_SUPER }}
        with:
          args: apply -f ./tools/deployment/api/${{ env.NAMESPACE }}

      - name: 'Deploy: Kubernetes apply WEB'
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.deploy_web }}
        # v1 (1.21.2) @ 03 Nov 2021 https://github.com/actions-hub/kubectl/tags
        uses: actions-hub/kubectl@365773786ebd92c7b36b6ab80e17d4a213ab0cd1
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_SUPER }}
        with:
          args: apply -f ./tools/deployment/website/${{ env.NAMESPACE }}

      # -------------------------------------------------- #
      # ALWAYS RUNS                                        #
      # -------------------------------------------------- #

      - name: 'Notify: Get Slack User'
        if: always()
        # v0 (0.2.2) @ 03 Nov 2021 https://github.com/kanga333/variable-mapper/tags
        uses: kanga333/variable-mapper@92703696e9a3f370901c3d53ae3836569b1055e5
        with:
          key: '${{ github.event.sender.login }}'
          map: |
            {
              "grindarius": { "SLACK_MENTION_USERS": "U014RN99J9Y" },
              "antonyharfield": { "SLACK_MENTION_USERS": "U09HZUDUY" },
              "rassokhina-e": { "SLACK_MENTION_USER": "U73MLD3UP" },
              ".*": { "SLACK_MENTION_USERS": "U014RN99J9Y,U09HZUDUY,U73MLD3UP" }
            }

      - name: 'Notify: Slack Failed'
        if: always()
        # v1 (1.9.0) @ 30 Mar 2022 https://github.com/ravsamhq/notify-slack-action/tags
        uses: ravsamhq/notify-slack-action@1f019707281e1f3c939880a75b9c401e00f0f7cf
        with:
          notify_when: 'failure,warning'
          status: ${{ job.status }}
          notification_title: '❌ CD: Bio <{repo_url}/tree/${{ env.BRANCH_NAME }}|${{ env.BRANCH_NAME }}>'
          message_format: '*FAILED* @ <{run_url}|${{ env.COMMIT_TITLE }}>'
          footer: '<{run_url}|{status_message}> at <{commit_url}|{commit_sha}> (triggered by ${{ env.SENDER }})'
          mention_users_when: 'failure,warnings'
          mention_users: ${{ env.SLACK_MENTION_USERS }}
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_FAILURE }}
          SENDER: ${{ github.event.sender.login || 'CRON' }}

      - name: 'Notify: Slack Success'
        if: always()
        # v1 (1.9.0) @ 30 Mar 2022 https://github.com/ravsamhq/notify-slack-action/tags
        uses: ravsamhq/notify-slack-action@1f019707281e1f3c939880a75b9c401e00f0f7cf
        with:
          notify_when: 'success'
          status: ${{ job.status }}
          notification_title: '✅ CD: Bio <{repo_url}/tree/${{ env.BRANCH_NAME }}|${{ env.BRANCH_NAME }}>'
          message_format: '*SUCCESS:* <https://${{ env.URL_WEB }}|${{ env.URL_WEB }}> & <https://${{ env.URL_API }}|${{ env.URL_API }}>'
          footer: '<{run_url}|{status_message}> at <{commit_url}|{commit_sha}> (triggered by ${{ env.SENDER }})'
        env:
          SLACK_WEBHOOK_URL: ${{ env.SLACK_WEBHOOK_SUCCESS }}
          SENDER: ${{ github.event.sender.login || 'CRON' }}

      - name: 'Debugging: Event Context'
        if: always()
        run: echo "$TO_ECHO"
        env: 
          TO_ECHO: ${{ toJSON(github) }}

      - name: 'Debugging: Env'
        if: always()
        run: echo "$TO_ECHO"
        env:
          TO_ECHO: ${{ toJSON(env) }}
